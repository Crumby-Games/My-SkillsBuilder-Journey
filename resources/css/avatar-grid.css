
/* Generic styling */

.grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(50px, 1fr));
    gap: 40px;
    padding: 20px;
    max-width:60%;
    margin: auto;
    overflow:hidden;
}

.grid-item {
    background: #16213e;
    border-radius: 70px;
    padding: 20px;
    text-align: center;
    height:180px;
    background:none;
    margin:0;
    position:relative;
    z-index: 1;
}

.grid-item .label {
    text-transform:capitalize;
}

.panel {
    margin-bottom:70px;
}

hr.category-separator {
    width:20%;
    border-color: rgb(155, 152, 245);
    margin-top:10px;
    margin-bottom:30px;
}

.tooltip {
    position: absolute;
    top: 115%;
    left: 50%;
    right: 50%;
    transform: translateX(-50%);
    width:250px;
    height:auto;
    max-height:400px;
    display:flex;
    opacity:0;
    scale:1;
    transition:0.2s ease;
    font-size:14px;
    background-color:black;
    padding:15px;
    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.5);
    border-radius:20px;
    border:1px solid rgb(155, 152, 245);
}

.corner-label {
    background:inherit;
    position:absolute;
    bottom:0;
    left:0;
    width:62px;
    height:62px;
    z-index:-10;
    text-align:left;
    scale:1;
    padding:3px;
    font-size:12px;
    display: flex;
    text-transform:uppercase;
    align-items: flex-end;
}

/* Avatar container variants */

.avatar-container {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    margin:auto;
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
    scale:1;
    background: #16213e;
    z-index:0;
    position: relative;
}

.avatar-container .circle-border {
    width:100%;
    height:100%;
    margin:0;
    padding:0;
    outline: 1px rgb(155, 152, 245) solid;
    display:none;
    position:absolute;
    outline-offset:-5px;
    top:0;
    border-radius:50%;
    left:0;
}

.avatar-container.selected .circle-border {
    display:block;
}

.avatar-container#current-avatar {
    margin:75px auto 0 auto;
    scale:1.3;
}

.circle-border:has(#current-avatar) {
    border-radius:50%;
    background: rgba(155, 152, 245, 0.3);
    display: inline-block;
    width:300px;
    height:300px;
    margin:5px auto 50px;
    box-shadow: rgba(0, 0, 0, 0.4) 0px 10px 10px 2px;
}

.avatar-container.disabled {
    filter: grayscale(100%);
    background-color: #222222;
    opacity:1;
}

.avatar-container.disabled .avatar-layer {
    filter: blur(5px) brightness(60%);
}

/* Avatar rendering. */

.avatar-layer {
    position:absolute;
    animation-play-state: paused !important;
    background-repeat: no-repeat;

    /* Adjusts to pixel dimensions per frame in the spritesheet */
    margin-top:calc(var(--frameHeight) / -4);
    width: var(--frameWidth);
    height: var(--frameHeight);

    animation: spinAvatar 1s steps(8) infinite;
    transition: transform 0.3s ease-in-out;
}

.avatar-layer.ghost {
    filter: contrast(50%);
    opacity:0.5;
}

.rh.avatar-layer {
    animation: spinAvatar 1s steps(8) infinite, updateZIndexRH 1s steps(8) infinite;
    z-index: 1;
}

.lh.avatar-layer {
    animation: spinAvatar 1s steps(8) infinite, updateZIndexLH 1s steps(8) infinite;
    z-index: 1;
}

/* Avatar container hover interaction  */

.avatar-container:hover ~ .tooltip {
    scale:1;
    opacity:1;
}

.avatar-container:hover:not(.disabled):not(#current-avatar) {
    opacity: 0.8;
    transform: scale(1.15);
    transition: transform 0.2s ease-in-out;
}

.avatar-container:hover .avatar-layer {
    animation-play-state: running !important;
}

/* Keyframe animations*/

/* To render only the relevant parts of the spritesheet, it is used as the background image so that it can be cropped to only reveal the correct frame.*/
@keyframes spinAvatar {
    from { background-position-y: 0 }
    to { background-position-y: calc(var(--frameHeight) * -8) }
}

/* Updates LH equippable z-index to display on the correct layer based on rotation frame */
@keyframes updateZIndexLH {
    0%, 10%, 50%, 62.5%, 75%, 87.5%, 100% { z-index: -1; }
    12.5%, 25%, 45% { z-index: 1; }
}

/* Updates LH equippable z-index to display on the correct layer based on rotation frame */
@keyframes updateZIndexRH {
    0%, 20%, 80%, 100% { z-index: 1; }
    25%, 37.5%, 50%, 62.5%, 75% { z-index: -1; }
}

/*Ensures consumables are displayed non-blurry*/
img, canvas, .avatar-layer {
    image-rendering: pixelated;
    image-rendering: crisp-edges;
}